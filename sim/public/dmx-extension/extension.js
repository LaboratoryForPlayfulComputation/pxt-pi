var extId = window.location.hash.substr(1);
var hosted = false;
var idToType = {};
var usercode = {};

function receiveMessage(ev) {
    var msg = ev.data;
    var action = idToType[msg.id];
    if (action) {
        console.debug('neoanim received ' + action);
        switch (action) {
            case "extinit":
                hosted = true;
                console.log('host connection completed')
                sendRequest("extreadusercode");
                break;
            case "extreadusercode":
                usercode = msg.resp || {};
                break;
        }
        delete idToType[msg.id];
    }
}

function mkRequest(action) {
    var id = Math.random().toString();
    idToType[id] = action;
    return {
        type: "pxtpkgext",
        action: action,
        extId: extId,
        response: true,
        id: id
    }
}

function isIFrame() {
    try {
        return window && window.self !== window.top;
    } catch (e) {
        return true;
    }
}

function sendRequest(action, body) {
    if (!isIFrame()) return;
    var msg = mkRequest(action);
    msg.body = body;
    window.parent.postMessage(msg, "*");
}

function renderUserCode() {
    var ts = `// This file was autogenerated, do not edit...
namespace dmx {
`
    var images = JSON.stringify(usercode.json);
    Object.keys(usercode).forEach(function (fileName) {
        ts +=
            `
/*
* An awesome animation
*/
//% fixedInstance block="${fileName.replace(/[_-]/g, ' ')}" jres=light.theaterChaseAnimation chase" blockIdentity="light._animationPicker"    
export const ${fileName.replace(/[_-]/g, '')}Animation = light.animationSheet(hex \`${usercode[fileName]}\`);
`
    })
    ts += `
}`
    return ts;
}

function saveUserCode(fileName, out) {            
    usercode[fileName.toLowerCase()] = out;
    var ts = renderUserCode();
    sendRequest("extwritecode", {
        code: ts,
        json: JSON.stringify(usercode, null, 2)
    })
    /*preview.innerText = 'Animation saved...';
    output.innerText = ts;
    outputext.style.display = 'block';
    selectOutput();*/
}

document.onreadystatechange = function (er) {
    if (document.readyState != "complete") return;
    window.addEventListener("message", receiveMessage, false);
    sendRequest("extinit")
}